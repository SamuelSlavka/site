version: "3"

networks:
  monitoring:
    driver: bridge
  keycloak_dev_network:
    driver: bridge

volumes:
  db:
    driver: local
  pgdata_keycloak:
    driver: local
services:
  nginx:
    image: nginx:mainline-alpine
    container_name: nginx
    restart: unless-stopped
    volumes:
      - ./:/etc/nginx/conf.d
    network_mode: "host"

  keycloak:
    image: quay.io/keycloak/keycloak:21.0.1
    command: start-dev
    environment:
      KC_DB: postgres
      KC_DB_URL_HOST: postgres_keycloak
      KC_DB_URL_DATABASE: keycloak
      KC_DB_PASSWORD: ${DB_PASS}
      KC_DB_USERNAME: keycloak
      KC_DB_SCHEMA: public
      KEYCLOAK_ADMIN: admin5
      KEYCLOAK_ADMIN_PASSWORD: ${KC_PASS}
    ports:
      - 8080:8080
    depends_on:
      postgres_keycloak:
        condition: service_healthy
    networks:
      - keycloak_dev_network
 
  postgres_keycloak:
    image: postgres:14.7
    command: postgres -c 'max_connections=100'
    volumes:
      - pgdata_keycloak:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: ${DB_PASS:?db password required}
    healthcheck:
      test: "exit 0"
    ports:
      - 5433:5432
    networks:
      - keycloak_dev_network

  db:
    image: postgres:14.1-alpine
    restart: always
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: ${DB_PASS:?db password required}
    ports:
      - 5434:5434
    volumes: 
      - db:/var/lib/postgresql/data
